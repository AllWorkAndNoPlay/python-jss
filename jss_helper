#!/usr/bin/python
"""jss_helper

Command line utility using jss_helper.py

Shea Craig 2014

"""

# Be careful not to have name collisions due helper functions calling similar
# functions from jss_helper!
from jss_helper import *
import argparse


def get_all_policies(args):
    """Helper function."""
    results = get_policies()
    pprint(results)


def get_group_policies(args):
    """Helper function."""
    results = get_policies_scoped_to_computer_group(args.group)
    print("Results:")
    for result in results:
        pprint(result[0])
        pprint(result[1])


def policy(args):
    """Helper function."""
    result = get_policy_by_id(args.id)
    pprint(result)


def policy_by_name(args):
    """Helper function."""
    result = get_policy_by_name(args.name)
    pprint(result)


def main():
    """Run as a cli command."""

    # Create our argument parser
    parser = argparse.ArgumentParser(description="Query the JSS.")
    subparser = parser.add_subparsers(dest='subparser_name')

    # get_policies
    help = "Get a list of all policies and their IDs."
    subparser_policies = subparser.add_parser('policies', help=help)
    subparser_policies.set_defaults(func=get_all_policies)

    # policy
    help = "Get a policy by ID."
    subparser_policy = subparser.add_parser('policy', help=help)
    subparser_policy.add_argument('id', help="ID of policy to retrieve.")
    subparser_policy.set_defaults(func=policy)

    # policy_by_name
    help = "Get a policy by name."
    subparser_policy_by_name = subparser.add_parser('policy_by_name',
                                                    help=help)
    help = "Name of policy to retrieve."
    subparser_policy_by_name.add_argument('name', help=help)
    subparser_policy_by_name.set_defaults(func=policy_by_name)

    # policy_by_group
    help = "Lists all policies scoped to provided group."
    subparser_policy_by_group = subparser.add_parser('policy_by_group',
                                                     help=help)
    subparser_policy_by_group.add_argument('group', help="Group name to query.")
    subparser_policy_by_group.set_defaults(func=get_group_policies)

    # Parse the args and then call their target function
    args = parser.parse_args()
    args.func(args)


if __name__ == '__main__':
    main()
